#include<stdio.h>  
#include<stdlib.h> 
static int tablesize=16; 
static int overlappingcount=0;
int hash(int tablesize,int array[],int n,int i,int cnt)
{   int hashtable[1000000]={0}; 
    int table[1000],tablevalue=0;
    while(i<n)
    {
        if(hashtable[array[i]%tablesize]==0)
        {
            hashtable[array[i]%tablesize]=array[i];
            cnt++; 
            i++;
        } 
        else if(hashtable[array[i]%tablesize]==array[i])
         i++; 
        else 
        {  
            int found=0; 
            for(int j=0;j<tablevalue;j++)
            {
                if(table[j]==array[i]) 
                { 
                    found=1; 
                    break; 
                }
            } 
            if(found==0)
            { 
                  table[tablevalue++]=array[i];
                  overlappingcount++; 
                  cnt++;  
            }
            i++;
        }
        if(is75(tablesize,cnt) && i<n-1)
         return 1; 
    } 
    return 0;
} 
int is75(int n,int cnt)
{
   int a=n-(n/4);
    if(cnt>=a)
     return 1; 
    else  
     return 0;
}
int  main() 
{ 
    int n; 
    scanf("%d",&n); 
    int array[10000]; 
    for(int i=0;i<n;i++)
     scanf("%d",&array[i]);  
    int temp;
    l:temp=hash(tablesize,array,n,0,0);  
     if(temp!=0)
    {   
        tablesize=tablesize*2;
        goto l;
    }
    printf("%d",overlappingcount); 
    
}